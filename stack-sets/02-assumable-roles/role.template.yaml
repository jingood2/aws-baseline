Parameters:
  MFA:
    Type: String
    Default: true
    AllowedValues: [true, false]
    Description: Require MFA when assuming into a Role.
  AllowedRegions:
    Type: String
    Description: Comma separated list of Regions that can be used in your AWS Accounts.
  MaxSessionDuration:
    Type: Number
    Default: 28800
    Description: Maximum Duration you can set when assuming a role.
  ExportPrefix:
    Type: String
    Default: assumable-roles

Conditions:
  HasMFAEnabled: !Equals [true, !Ref MFA]

Resources:
  AssumableAdminRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      PermissionsBoundary: !Ref AdminPermissionsBoundary
      Policies:
        - PolicyName: AdminAccess
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: AdminAccess
                Effect: Allow
                Action:
                  - '*'
                Resource:
                  - '*'
      RoleName: AssumableAdminRole
    Type: AWS::IAM::Role

  AssumableReadOnlyRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:   
        - PolicyName: SSMSessionOperation
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: SSMSessionOperation
                Effect: Allow
                Action:
                  - 'ssm:*'
                Resource:
                  - '*'
      RoleName: AssumableReadOnlyRole
    Type: AWS::IAM::Role

  AssumableAwsViewOnlyRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: AssumableAwsViewOnlyRole
    Type: AWS::IAM::Role

  AssumableAwsDataScientistRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/DataScientist
      RoleName: AssumableAwsDataScientistRole
    Type: AWS::IAM::Role

  AssumableAwsPowerUserRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
      RoleName: AssumableAwsPowerUserRole
    Type: AWS::IAM::Role

  AssumableAwsNetworkAdministratorRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/NetworkAdministrator
      RoleName: AssumableAwsNetworkAdministratorRole
    Type: AWS::IAM::Role

  AssumableAwsDatabaseAdministratorRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/DatabaseAdministrator
      RoleName: AssumableAwsDatabaseAdministratorRole
    Type: AWS::IAM::Role

  AssumableAwsSecurityAuditRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
      RoleName: AssumableAwsSecurityAuditRole
    Type: AWS::IAM::Role

  AssumableAwsSupportUserRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/SupportUser
      RoleName: AssumableAwsSupportUserRole
    Type: AWS::IAM::Role

  AssumableAwsSystemAdministratorRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/SystemAdministrator
      RoleName: AssumableAwsSystemAdministratorRole
    Type: AWS::IAM::Role

  AssumableDeveloperRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      PermissionsBoundary: !Ref DeveloperPermissionsBoundary
      Policies:
        - PolicyName: CloudFormation
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: AllowDeveloperAccess
                Effect: Allow
                Action:
                  - '*'
                Resource:
                  - "*"
      RoleName: AssumableDeveloperRole
    Type: AWS::IAM::Role

  AssumableCloudFormationDeveloperRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      PermissionsBoundary: !Ref DeveloperPermissionsBoundary
      Policies:
        - PolicyName: CloudFormation
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: AllowCloudFormation
                Effect: Allow
                Action:
                  - cloudformation:*
                Resource:
                  - "*"
              - Sid: PassingRoleToCloudFormation
                Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:GetRole
                Resource:
                  - !GetAtt CloudFormationRole.Arn
              - Action:
                  - ecr:DescribeImages
                  - ecr:ListImages
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:BatchDeleteImage
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - ecr:BatchDeleteImage
                Effect: Allow
                Resource:
                  - "*"
                Sid: ECRPushAccess
              - Action:
                  - lambda:UpdateFunctionCode
                Effect: Allow
                Resource:
                  - "*"
                Sid: LambdaUpdateFunctionCode
      RoleName: AssumableCloudFormationDeveloperRole
    Type: AWS::IAM::Role

  CloudFormationRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      PermissionsBoundary: !Ref DeveloperPermissionsBoundary
      Policies:
        - PolicyName: CloudFormationRoleAdmin
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: CloudFormationRoleAdmin
                Effect: Allow
                Action:
                  - '*'
                Resource:
                  - '*'
      RoleName: CloudFormationRole
    Type: AWS::IAM::Role

  AssumableSecurityAuditRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
      Policies:
        - PolicyName: SecurityAudit
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Action:
                  - support:DescribeTrustedAdvisorChecks
                  - sns:ListSubscriptions
                Effect: Allow
                Resource: "*"
      RoleName: AssumableSecurityAuditRole
    Type: AWS::IAM::Role

  AssumableOperationsRole:
    Properties:
      MaxSessionDuration: !Ref MaxSessionDuration
      AssumeRolePolicyDocument: {% include 'policy-statements/assumable-role-policy-document.json'%}
      PermissionsBoundary: !Ref DeveloperPermissionsBoundary
      Policies:
        - PolicyName: Operations
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Action:
                  - cloudwatch:Describe*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                  - logs:Describe*
                  - logs:Get*
                  - logs:List*
                  - logs:FilterLogEvents
                  - logs:StartQuery
                Effect: Allow
                Resource:
                  - "*"
                Sid: AllowCloudWatchDevopsView
      RoleName: AssumableOperationsRole
    Type: AWS::IAM::Role

Outputs:
  AssumableAdminRoleArn:
    Value: !GetAtt AssumableAdminRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAdminRoleArn

  AssumableDeveloperRoleArn:
    Value: !GetAtt AssumableDeveloperRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableDeveloperRoleArn

  AssumableCloudFormationDeveloperRoleArn:
    Value: !GetAtt AssumableCloudFormationDeveloperRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableCloudFormationDeveloperRoleArn

  AssumableOperationsRoleArn:
    Value: !GetAtt AssumableOperationsRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableOperationsRoleArn

  AssumableReadOnlyRoleArn:
    Value: !GetAtt AssumableReadOnlyRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableReadOnlyRoleArn

  AssumableSecurityAuditRoleArn:
    Value: !GetAtt AssumableSecurityAuditRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableSecurityAuditRoleArn

  AssumableAwsViewOnlyRoleArn:
    Value: !GetAtt AssumableAwsViewOnlyRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsViewOnlyRoleArn

  AssumableAwsDataScientistRoleArn:
    Value: !GetAtt AssumableAwsDataScientistRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsDataScientistRoleArn

  AssumableAwsPowerUserRoleArn:
    Value: !GetAtt AssumableAwsPowerUserRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsPowerUserRoleArn

  AssumableAwsNetworkAdministratorRoleArn:
    Value: !GetAtt AssumableAwsNetworkAdministratorRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsNetworkAdministratorRoleArn

  AssumableAwsDatabaseAdministratorRoleArn:
    Value: !GetAtt AssumableAwsDatabaseAdministratorRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsDatabaseAdministratorRoleArn

  AssumableAwsSupportUserRoleArn:
    Value: !GetAtt AssumableAwsSupportUserRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsSupportUserRoleArn

  AssumableAwsSystemAdministratorRoleArn:
    Value: !GetAtt AssumableAwsSystemAdministratorRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsSystemAdministratorRoleArn

  AssumableAwsSecurityAuditRoleArn:
    Value: !GetAtt AssumableAwsSecurityAuditRole.Arn
    Export:
      Name: !Sub ${ExportPrefix}:AssumableAwsSecurityAuditRoleArn
